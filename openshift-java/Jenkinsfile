#!/usr/bin/env groovy

node('rhel7'){
	stage('Checkout repo') {
		deleteDir()
		git url: 'https://github.com/redhat-developer/vscode-openshift-extension-pack.git'
		dir('openshift-java') {
			sh 'pwd'
		}
	}

	stage('Install requirements') {
		def nodeHome = tool 'nodejs-12.13.1'
		env.PATH="${env.PATH}:${nodeHome}/bin"
		sh "npm install -g typescript vsce"
	}

	stage('Build') {
		dir('openshift-java') {
			sh 'pwd'
			sh "npm install"
		}
	}

	stage('Package') {
		dir('openshift-java') {
			sh 'pwd'
			try {
					def packageJson = readJSON file: 'package.json'
					sh "vsce package -o openshift-java-ext-${packageJson.version}-${env.BUILD_NUMBER}.vsix"
				}
			finally {
				archiveArtifacts artifacts: '*.vsix'
			}
		}
	}
	
	if(params.UPLOAD_LOCATION) {
		stage('Snapshot') {
			dir('openshift-java') {
				sh 'pwd'
				def filesToPush = findFiles(glob: '**.vsix')
				sh "rsync -Pzrlt --rsh=ssh --protocol=28 ${filesToPush[0].path} ${UPLOAD_LOCATION}/snapshots/vscode-openshift-extension-pack/java/"
				stash name:'vsix', includes:filesToPush[0].path
			}
		}
	}
}

node('rhel7'){
	if(publishToMarketPlace.equals('true')){
		timeout(time:5, unit:'DAYS') {
			input message:'Approve deployment?', submitter: 'msuman'
		}

		stage("Publish to Marketplace") {
            unstash 'vsix'
            withCredentials([[$class: 'StringBinding', credentialsId: 'vscode_java_marketplace', variable: 'TOKEN']]) {
                def vsix = findFiles(glob: '**.vsix')
                sh 'vsce publish -p ${TOKEN} --packagePath' + " ${vsix[0].path}"
            }
            archive includes:"**.vsix"

            stage "Promote the build to stable"
            def vsix = findFiles(glob: '**.vsix')
            sh "rsync -Pzrlt --rsh=ssh --protocol=28 ${vsix[0].path} ${UPLOAD_LOCATION}/stable/vscode-openshift-extension-pack/java/"
        }
	}
}

